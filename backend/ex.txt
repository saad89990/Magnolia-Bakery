import React, { useEffect, useState } from "react";
import Navbar from "../components/Navbar";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

export default function MyOrders() {
  const [orders, setOrders] = useState([]);
  const [loading, setLoading] = useState(true);
  const [statusFilter, setStatusFilter] = useState("all");

  const userid = localStorage.getItem("userid");

  const fetchOrders = async () => {
    try {
      const res = await fetch(`http://localhost:5005/api/my-orders/${userid}`);
      const data = await res.json();

      if (data.success && Array.isArray(data.orders)) {
        setOrders(data.orders);
      } else {
        setOrders([]);
        toast.error("No orders found.");
      }
    } catch (err) {
      console.error("❌ Error:", err.message);
      toast.error("Error fetching your orders.");
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchOrders();
  }, []);

  const filteredOrders =
    statusFilter === "all"
      ? orders
      : orders.filter((o) => o.status === statusFilter);

  return (
    <>
      <ToastContainer position="top-right" theme="colored" />
      <div className="container my-5">
        <h2 className="mb-4" style={{ color: "#a55b4e" }}>🧾 My Orders</h2>

        <div className="mb-3">
          <select
            className="form-select w-auto"
            value={statusFilter}
            onChange={(e) => setStatusFilter(e.target.value)}
          >
            <option value="all">All</option>
            <option value="pending">Pending</option>
            <option value="successful">Successful</option>
            <option value="failed">Failed</option>
            <option value="cancelled">Cancelled</option>
          </select>
        </div>

        {loading ? (
          <div className="text-center">
            <div className="spinner-border text-primary" role="status"></div>
          </div>
        ) : filteredOrders.length === 0 ? (
          <div className="text-center text-muted">No orders found.</div>
        ) : (
          filteredOrders.map((order, i) => (
            <div key={i} className="card mb-4 shadow-sm border">
              <div className="card-header bg-light">
                <strong>Order ID:</strong> {order.order_id || "N/A"} <br />
                <strong>Status:</strong>{" "}
                <span
                  className={`badge bg-${
                    order.status === "successful"
                      ? "success"
                      : order.status === "failed"
                      ? "danger"
                      : order.status === "cancelled"
                      ? "secondary"
                      : "warning"
                  }`}
                >
                  {order.status}
                </span>{" "}
                <br />
                <small className="text-muted">
                  Placed on: {new Date(order.createdAt).toLocaleString()}
                </small>
              </div>
              <div className="card-body">
                {Array.isArray(order.items) &&
                  order.items.map((item, idx) => (
                    <div
                      key={idx}
                      className="d-flex justify-content-between align-items-center border-bottom py-2"
                    >
                      <div className="d-flex align-items-center">
                        <img
                          src={`https://source.unsplash.com/60x60/?${item.name}`}
                          alt={item.name}
                          className="me-3 rounded"
                          style={{ width: "60px", height: "60px", objectFit: "cover" }}
                        />
                        <div>
                          <h6 className="mb-0">{item.name}</h6>
                          <small className="text-muted">
                            Size: {item.size}, Qty: {item.qty}
                          </small>
                        </div>
                      </div>
                      <strong>₹{item.price}</strong>
                    </div>
                  ))}
                <div className="text-end mt-3">
                  <strong>Total: ₹{order.totalPrice}</strong>
                </div>
              </div>
            </div>
          ))
        )}
      </div>
    </>
  );
}
